{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layouts/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","onShowClick","showContactInfo","onDeleteClick","_ref","delete","_x","_x2","_this2","_this$props","name","email","phone","toggleIcon","className","style","cursor","onClick","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","event","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layouts_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layouts_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a2ff817.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data })\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom'\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from 'axios';\n\nclass Contact extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showContactInfo: false\n    };\n  }\n\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id })\n  };\n\n  render() {\n    const { name, email, phone, id } = this.props;\n    const { showContactInfo } = this.state;\n    let toggleIcon = showContactInfo ? \"fas fa-toggle-on\" : \"fas fa-toggle-off\";\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.onShowClick}\n                  className={`${toggleIcon} ml-2`}\n                />\n                <i\n                  className=\"fas fa-user-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  name={contact.name}\n                  email={contact.email}\n                  phone={contact.phone}\n                  id={contact.id}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        onChange={onChange}\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n      />\n      {error && <div className=\"invalid-feedbacl\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\nimport { Consumer } from \"../../context\";\nimport axios from 'axios'\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = async (dispatch, event) => {\n    event.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data })\n\n      ;\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    type=\"email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\nimport { Consumer } from \"../../context\";\nimport axios from 'axios'\n\nclass EditContact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {}\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    onSubmit = async (dispatch, event) => {\n        event.preventDefault();\n        const { name, email, phone } = this.state;\n\n        // Check for errors\n        if (name === \"\") {\n            this.setState({ errors: { name: \"Name is required\" } });\n            return;\n        }\n        if (email === \"\") {\n            this.setState({ errors: { email: \"Email is required\" } });\n            return;\n        }\n        if (phone === \"\") {\n            this.setState({ errors: { phone: \"Phone is required\" } });\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\n\n        // Clear State\n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors: {}\n        });\n\n        this.props.history.push(\"/\");\n    };\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        name=\"email\"\n                                        placeholder=\"Enter Email...\"\n                                        value={email}\n                                        type=\"email\"\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Update Contact\"\n                                        className=\"btn btn-light btn-block\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My app\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404 Page Not Found</span>\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n    state = {\n        title: '',\n        body: \"\"\n    }\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/posts/1`)\n            .then(response => response.json())\n            .then(data => this.setState({ title: data.title, body: data.body }))\n\n    }\n\n    render() {\n        const { title, body } = this.state\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from './components/contacts/EditContact';\nimport Header from \"./components/layouts/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from './components/test/Test'\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}